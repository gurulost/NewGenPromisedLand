{"numTotalTestSuites":49,"numPassedTestSuites":49,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":153,"numPassedTests":153,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751781830944,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu renders save/load menu with title","status":"passed","title":"renders save/load menu with title","duration":105.2949920000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu displays save current game section when gameState exists","status":"passed","title":"displays save current game section when gameState exists","duration":43.525886999999784,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu does not display save section when gameState is null","status":"passed","title":"does not display save section when gameState is null","duration":29.55804799999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu enables save button only when save name is entered","status":"passed","title":"enables save button only when save name is entered","duration":64.65658500000063,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu saves game to localStorage when save button is clicked","status":"passed","title":"saves game to localStorage when save button is clicked","duration":75.08631400000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu displays \"No saved games found\" when localStorage is empty","status":"passed","title":"displays \"No saved games found\" when localStorage is empty","duration":49.001367000000755,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu loads saved games from localStorage","status":"passed","title":"loads saved games from localStorage","duration":103.20157199999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu loads selected game when load button is clicked","status":"passed","title":"loads selected game when load button is clicked","duration":43.49820700000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu allows saving game with Enter key","status":"passed","title":"allows saving game with Enter key","duration":38.88438700000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu shows import/export section","status":"passed","title":"shows import/export section","duration":76.86704399999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu shows export button only when save is selected","status":"passed","title":"shows export button only when save is selected","duration":88.48648400000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu deletes save when delete button is clicked","status":"passed","title":"deletes save when delete button is clicked","duration":201.42951400000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu handles corrupt save data gracefully","status":"passed","title":"handles corrupt save data gracefully","duration":61.47278599999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["SaveLoadMenu"],"fullName":"SaveLoadMenu closes menu when close button is clicked","status":"passed","title":"closes menu when close button is clicked","duration":60.777445000000625,"failureMessages":[],"meta":{}}],"startTime":1751781835592,"endTime":1751781836633.7773,"status":"passed","message":"","name":"/home/runner/workspace/shared/components/SaveLoadMenu.test.tsx"},{"assertionResults":[{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel renders unit actions panel with unit info","status":"passed","title":"renders unit actions panel with unit info","duration":134.70435999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel displays worker-specific actions","status":"passed","title":"displays worker-specific actions","duration":51.89294599999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel displays scout-specific actions","status":"passed","title":"displays scout-specific actions","duration":64.18936500000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel displays missionary-specific actions","status":"passed","title":"displays missionary-specific actions","duration":60.635385999999926,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel shows heal action for missionaries with sufficient faith","status":"passed","title":"shows heal action for missionaries with sufficient faith","duration":21.5554089999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel disables actions when resources are insufficient","status":"passed","title":"disables actions when resources are insufficient","duration":23.41870800000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel shows available actions with costs","status":"passed","title":"shows available actions with costs","duration":40.09134699999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel handles action execution when button is clicked","status":"passed","title":"handles action execution when button is clicked","duration":80.45699400000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel closes panel when close button is clicked","status":"passed","title":"closes panel when close button is clicked","duration":314.4061270000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel displays different unit types correctly","status":"passed","title":"displays different unit types correctly","duration":38.33474699999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel shows no actions message when unit has no available actions","status":"passed","title":"shows no actions message when unit has no available actions","duration":48.070176000000174,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel handles unit actions for different unit types","status":"passed","title":"handles unit actions for different unit types","duration":32.11329800000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel displays action requirements correctly","status":"passed","title":"displays action requirements correctly","duration":20.711607999999615,"failureMessages":[],"meta":{}},{"ancestorTitles":["UnitActionsPanel"],"fullName":"UnitActionsPanel handles special abilities based on unit type","status":"passed","title":"handles special abilities based on unit type","duration":22.84139899999991,"failureMessages":[],"meta":{}}],"startTime":1751781835612,"endTime":1751781836565.8413,"status":"passed","message":"","name":"/home/runner/workspace/shared/components/UnitActionsPanel.test.tsx"},{"assertionResults":[{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen renders victory screen with winner announcement","status":"passed","title":"renders victory screen with winner announcement","duration":247.38786100000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen displays correct victory type","status":"passed","title":"displays correct victory type","duration":61.59082500000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen shows territorial victory correctly","status":"passed","title":"shows territorial victory correctly","duration":62.77757600000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen displays player rankings","status":"passed","title":"displays player rankings","duration":54.006304999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen shows game statistics","status":"passed","title":"shows game statistics","duration":45.23675700000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen calls onPlayAgain when Play Again button is clicked","status":"passed","title":"calls onPlayAgain when Play Again button is clicked","duration":104.89085200000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen calls onMainMenu when Main Menu button is clicked","status":"passed","title":"calls onMainMenu when Main Menu button is clicked","duration":64.73150499999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen displays elimination victory correctly","status":"passed","title":"displays elimination victory correctly","duration":65.31269500000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen shows domination victory correctly","status":"passed","title":"shows domination victory correctly","duration":84.11076299999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["VictoryScreen"],"fullName":"VictoryScreen displays winner stats correctly","status":"passed","title":"displays winner stats correctly","duration":46.373187000000144,"failureMessages":[],"meta":{}}],"startTime":1751781835618,"endTime":1751781836454.3733,"status":"passed","message":"","name":"/home/runner/workspace/shared/components/VictoryScreen.test.tsx"},{"assertionResults":[{"ancestorTitles":["Factions"],"fullName":"Factions should have all six factions defined","status":"passed","title":"should have all six factions defined","duration":4.044699999999921,"failureMessages":[],"meta":{}},{"ancestorTitles":["Factions"],"fullName":"Factions should have complete faction data","status":"passed","title":"should have complete faction data","duration":3.184979999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Factions"],"fullName":"Factions should retrieve individual factions correctly","status":"passed","title":"should retrieve individual factions correctly","duration":0.6139600000001337,"failureMessages":[],"meta":{}},{"ancestorTitles":["Factions"],"fullName":"Factions should have unique colors for each faction","status":"passed","title":"should have unique colors for each faction","duration":0.40085999999973865,"failureMessages":[],"meta":{}},{"ancestorTitles":["Factions"],"fullName":"Factions should have valid faction abilities","status":"passed","title":"should have valid faction abilities","duration":4.085199000000102,"failureMessages":[],"meta":{}},{"ancestorTitles":["Factions"],"fullName":"Factions should have starting units defined","status":"passed","title":"should have starting units defined","duration":0.8217399999998634,"failureMessages":[],"meta":{}},{"ancestorTitles":["Factions"],"fullName":"Factions should have faction bonuses with proper structure","status":"passed","title":"should have faction bonuses with proper structure","duration":0.8915399999996225,"failureMessages":[],"meta":{}}],"startTime":1751781837958,"endTime":1751781837972.8916,"status":"passed","message":"","name":"/home/runner/workspace/shared/data/factions.test.ts"},{"assertionResults":[{"ancestorTitles":["GameRules"],"fullName":"GameRules should have all required sections defined","status":"passed","title":"should have all required sections defined","duration":2.410219999999754,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRules"],"fullName":"GameRules should have reasonable victory thresholds","status":"passed","title":"should have reasonable victory thresholds","duration":0.46965999999974883,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRules"],"fullName":"GameRules should have positive resource generation values","status":"passed","title":"should have positive resource generation values","duration":0.31300000000010186,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRules"],"fullName":"GameRules should have valid unit stats","status":"passed","title":"should have valid unit stats","duration":0.43250999999963824,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRules"],"fullName":"GameRules should have terrain movement costs defined","status":"passed","title":"should have terrain movement costs defined","duration":0.7907100000002174,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRules"],"fullName":"GameRules should have ability configuration values","status":"passed","title":"should have ability configuration values","duration":0.3507399999998597,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRules"],"fullName":"GameRules should have reasonable attack bonuses","status":"passed","title":"should have reasonable attack bonuses","duration":0.31934000000001106,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRules"],"fullName":"GameRules should have resource costs for abilities","status":"passed","title":"should have resource costs for abilities","duration":0.2168309999997291,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRuleHelpers"],"fullName":"GameRuleHelpers should calculate star income correctly","status":"passed","title":"should calculate star income correctly","duration":0.5227199999999357,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRuleHelpers"],"fullName":"GameRuleHelpers should check faith victory correctly","status":"passed","title":"should check faith victory correctly","duration":0.3027500000002874,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRuleHelpers"],"fullName":"GameRuleHelpers should check territorial victory correctly","status":"passed","title":"should check territorial victory correctly","duration":0.3753799999999501,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRuleHelpers"],"fullName":"GameRuleHelpers should calculate research cost with scaling","status":"passed","title":"should calculate research cost with scaling","duration":0.22555000000011205,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRuleHelpers"],"fullName":"GameRuleHelpers should return correct movement cost for terrain","status":"passed","title":"should return correct movement cost for terrain","duration":0.1924999999996544,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRuleHelpers"],"fullName":"GameRuleHelpers should identify passable terrain correctly","status":"passed","title":"should identify passable terrain correctly","duration":0.3715900000001966,"failureMessages":[],"meta":{}},{"ancestorTitles":["GameRuleHelpers"],"fullName":"GameRuleHelpers should return defense bonus for terrain","status":"passed","title":"should return defense bonus for terrain","duration":0.2218800000000556,"failureMessages":[],"meta":{}}],"startTime":1751781838902,"endTime":1751781838910.3716,"status":"passed","message":"","name":"/home/runner/workspace/shared/data/gameRules.test.ts"},{"assertionResults":[{"ancestorTitles":["Unit Definitions"],"fullName":"Unit Definitions should have all unit types defined","status":"passed","title":"should have all unit types defined","duration":2.4967400000000453,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Definitions"],"fullName":"Unit Definitions should have complete unit stats","status":"passed","title":"should have complete unit stats","duration":5.008299999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Definitions"],"fullName":"Unit Definitions should retrieve unit definitions correctly","status":"passed","title":"should retrieve unit definitions correctly","duration":0.3927600000001803,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Definitions"],"fullName":"Unit Definitions should have valid abilities arrays","status":"passed","title":"should have valid abilities arrays","duration":1.1589500000000044,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Definitions"],"fullName":"Unit Definitions should have appropriate costs for different unit types","status":"passed","title":"should have appropriate costs for different unit types","duration":0.29836999999997715,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Definitions"],"fullName":"Unit Definitions should filter units by faction correctly","status":"passed","title":"should filter units by faction correctly","duration":0.3868699999998171,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Definitions"],"fullName":"Unit Definitions should have reasonable stat ranges","status":"passed","title":"should have reasonable stat ranges","duration":4.367399000000205,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Definitions"],"fullName":"Unit Definitions should have proper tech requirements structure","status":"passed","title":"should have proper tech requirements structure","duration":0.34427000000005137,"failureMessages":[],"meta":{}}],"startTime":1751781837719,"endTime":1751781837734.3442,"status":"passed","message":"","name":"/home/runner/workspace/shared/data/units.test.ts"},{"assertionResults":[{"ancestorTitles":["Game Reducer","MOVE_UNIT action"],"fullName":"Game Reducer MOVE_UNIT action should move unit to valid adjacent tile","status":"passed","title":"should move unit to valid adjacent tile","duration":7.2962390000002415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","MOVE_UNIT action"],"fullName":"Game Reducer MOVE_UNIT action should not move unit beyond movement range","status":"passed","title":"should not move unit beyond movement range","duration":0.9597399999997833,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","ATTACK_UNIT action"],"fullName":"Game Reducer ATTACK_UNIT action should deal damage in combat","status":"passed","title":"should deal damage in combat","duration":1.4614500000002408,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","ATTACK_UNIT action"],"fullName":"Game Reducer ATTACK_UNIT action should remove unit when HP drops to 0 or below","status":"passed","title":"should remove unit when HP drops to 0 or below","duration":0.7585300000000643,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","END_TURN action"],"fullName":"Game Reducer END_TURN action should advance to next player","status":"passed","title":"should advance to next player","duration":1.0570800000000418,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","END_TURN action"],"fullName":"Game Reducer END_TURN action should reset unit movement","status":"passed","title":"should reset unit movement","duration":0.32051999999976033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","END_TURN action"],"fullName":"Game Reducer END_TURN action should increment turn number when cycling back to first player","status":"passed","title":"should increment turn number when cycling back to first player","duration":0.3708499999997912,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","RESEARCH_TECH action"],"fullName":"Game Reducer RESEARCH_TECH action should add tech to researched list when player has enough stars","status":"passed","title":"should add tech to researched list when player has enough stars","duration":1.426260000000184,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","RESEARCH_TECH action"],"fullName":"Game Reducer RESEARCH_TECH action should not allow research without sufficient stars","status":"passed","title":"should not allow research without sufficient stars","duration":0.6167399999999361,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Invalid Actions"],"fullName":"Game Reducer Invalid Actions should not allow moving unit that does not belong to current player","status":"passed","title":"should not allow moving unit that does not belong to current player","duration":1.0312699999999495,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Invalid Actions"],"fullName":"Game Reducer Invalid Actions should not allow attacking friendly units","status":"passed","title":"should not allow attacking friendly units","duration":0.2929309999999532,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Invalid Actions"],"fullName":"Game Reducer Invalid Actions should handle actions for non-existent units gracefully","status":"passed","title":"should handle actions for non-existent units gracefully","duration":0.7616890000003878,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Enhanced END_TURN tests"],"fullName":"Game Reducer Enhanced END_TURN tests should calculate and add star income correctly","status":"passed","title":"should calculate and add star income correctly","duration":0.454450000000179,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Enhanced END_TURN tests"],"fullName":"Game Reducer Enhanced END_TURN tests should reset unit movement for next player units","status":"passed","title":"should reset unit movement for next player units","duration":0.5823100000002341,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Enhanced END_TURN tests"],"fullName":"Game Reducer Enhanced END_TURN tests should advance to next player correctly","status":"passed","title":"should advance to next player correctly","duration":0.3029999999998836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Complex Game Scenarios"],"fullName":"Game Reducer Complex Game Scenarios should handle full turn cycle with movement and combat","status":"passed","title":"should handle full turn cycle with movement and combat","duration":1.862800000000334,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Complex Game Scenarios"],"fullName":"Game Reducer Complex Game Scenarios should reject invalid moves at reducer level","status":"passed","title":"should reject invalid moves at reducer level","duration":0.98050000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Complex Game Scenarios"],"fullName":"Game Reducer Complex Game Scenarios should handle multiple units and coordinate conflicts","status":"passed","title":"should handle multiple units and coordinate conflicts","duration":1.1533800000001975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","Complex Game Scenarios"],"fullName":"Game Reducer Complex Game Scenarios should handle unit death and removal correctly","status":"passed","title":"should handle unit death and removal correctly","duration":0.5937700000004043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Reducer","State immutability"],"fullName":"Game Reducer State immutability should not mutate original state","status":"passed","title":"should not mutate original state","duration":1.835269999999582,"failureMessages":[],"meta":{}}],"startTime":1751781834678,"endTime":1751781834702.8352,"status":"passed","message":"","name":"/home/runner/workspace/shared/logic/gameReducer.test.ts"},{"assertionResults":[{"ancestorTitles":["Unit Logic","isPassableForUnit"],"fullName":"Unit Logic isPassableForUnit should allow movement on plains","status":"passed","title":"should allow movement on plains","duration":1.9670599999999467,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","isPassableForUnit"],"fullName":"Unit Logic isPassableForUnit should allow movement on mountains","status":"passed","title":"should allow movement on mountains","duration":0.2622200000000703,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","isPassableForUnit"],"fullName":"Unit Logic isPassableForUnit should block movement on water","status":"passed","title":"should block movement on water","duration":0.2678399999999783,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","isPassableForUnit"],"fullName":"Unit Logic isPassableForUnit should block movement to tiles with enemy units","status":"passed","title":"should block movement to tiles with enemy units","duration":0.4674199999999473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","isPassableForUnit"],"fullName":"Unit Logic isPassableForUnit should allow movement to tiles with friendly units","status":"passed","title":"should allow movement to tiles with friendly units","duration":0.3259699999998702,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","calculateReachableTiles"],"fullName":"Unit Logic calculateReachableTiles should return tiles within movement range","status":"passed","title":"should return tiles within movement range","duration":1.2399399999999332,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","calculateReachableTiles"],"fullName":"Unit Logic calculateReachableTiles should respect movement limitations","status":"passed","title":"should respect movement limitations","duration":0.46257999999988897,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","calculateReachableTiles"],"fullName":"Unit Logic calculateReachableTiles should exclude impassable terrain","status":"passed","title":"should exclude impassable terrain","duration":0.4752699999999095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","calculateReachableTiles"],"fullName":"Unit Logic calculateReachableTiles should return only current tile when unit has zero remaining movement","status":"passed","title":"should return only current tile when unit has zero remaining movement","duration":0.6117199999998775,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","calculateReachableTiles"],"fullName":"Unit Logic calculateReachableTiles should handle units with different movement ranges","status":"passed","title":"should handle units with different movement ranges","duration":0.5909999999998945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","calculateReachableTiles"],"fullName":"Unit Logic calculateReachableTiles should handle units on map edges correctly","status":"passed","title":"should handle units on map edges correctly","duration":0.6114900000002308,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","canSelectUnit"],"fullName":"Unit Logic canSelectUnit should allow selecting own units","status":"passed","title":"should allow selecting own units","duration":0.20262000000002445,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","canSelectUnit"],"fullName":"Unit Logic canSelectUnit should not allow selecting enemy units","status":"passed","title":"should not allow selecting enemy units","duration":0.16244999999980791,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","canSelectUnit"],"fullName":"Unit Logic canSelectUnit should not allow selecting units when not current player","status":"passed","title":"should not allow selecting units when not current player","duration":0.3749300000004041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","canUnitReachCoordinate"],"fullName":"Unit Logic canUnitReachCoordinate should return true for coordinates within movement range","status":"passed","title":"should return true for coordinates within movement range","duration":0.3560599999996157,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","canUnitReachCoordinate"],"fullName":"Unit Logic canUnitReachCoordinate should return false for coordinates beyond movement range","status":"passed","title":"should return false for coordinates beyond movement range","duration":0.23743000000013126,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","canUnitReachCoordinate"],"fullName":"Unit Logic canUnitReachCoordinate should return false for impassable coordinates","status":"passed","title":"should return false for impassable coordinates","duration":0.23517000000038024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getValidAttackTargets"],"fullName":"Unit Logic getValidAttackTargets should return enemy units within attack range","status":"passed","title":"should return enemy units within attack range","duration":1.7026899999996203,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getValidAttackTargets"],"fullName":"Unit Logic getValidAttackTargets should not return enemy units outside attack range","status":"passed","title":"should not return enemy units outside attack range","duration":0.4879399999999805,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getValidAttackTargets"],"fullName":"Unit Logic getValidAttackTargets should not return friendly units","status":"passed","title":"should not return friendly units","duration":0.42964900000015405,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getValidAttackTargets"],"fullName":"Unit Logic getValidAttackTargets should find targets for ranged units at greater distances","status":"passed","title":"should find targets for ranged units at greater distances","duration":0.40451100000018414,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getValidAttackTargets"],"fullName":"Unit Logic getValidAttackTargets should not find targets beyond ranged unit attack range","status":"passed","title":"should not find targets beyond ranged unit attack range","duration":0.49630000000024665,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getValidAttackTargets"],"fullName":"Unit Logic getValidAttackTargets should handle units with extended attack ranges correctly","status":"passed","title":"should handle units with extended attack ranges correctly","duration":1.2194509999999354,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getValidAttackTargets"],"fullName":"Unit Logic getValidAttackTargets should handle special unit types with different characteristics","status":"passed","title":"should handle special unit types with different characteristics","duration":0.8190800000002127,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","canUnitAttackTarget"],"fullName":"Unit Logic canUnitAttackTarget should allow attacking enemy units within range","status":"passed","title":"should allow attacking enemy units within range","duration":0.24843000000009852,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","canUnitAttackTarget"],"fullName":"Unit Logic canUnitAttackTarget should not allow attacking units outside range","status":"passed","title":"should not allow attacking units outside range","duration":0.16782000000011976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","canUnitAttackTarget"],"fullName":"Unit Logic canUnitAttackTarget should not allow attacking friendly units","status":"passed","title":"should not allow attacking friendly units","duration":0.262159999999767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","isUnitVisibleToPlayer"],"fullName":"Unit Logic isUnitVisibleToPlayer should see own units","status":"passed","title":"should see own units","duration":0.15258999999969092,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","isUnitVisibleToPlayer"],"fullName":"Unit Logic isUnitVisibleToPlayer should see enemy units within vision range","status":"passed","title":"should see enemy units within vision range","duration":0.15958000000000538,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","isUnitVisibleToPlayer"],"fullName":"Unit Logic isUnitVisibleToPlayer should not see enemy units outside vision range","status":"passed","title":"should not see enemy units outside vision range","duration":0.13895999999976993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","isUnitVisibleToPlayer"],"fullName":"Unit Logic isUnitVisibleToPlayer should see enemy units exactly at vision range boundary","status":"passed","title":"should see enemy units exactly at vision range boundary","duration":0.2375499999998283,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getVisibleUnits"],"fullName":"Unit Logic getVisibleUnits should return all own units","status":"passed","title":"should return all own units","duration":4.489900000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getVisibleUnits"],"fullName":"Unit Logic getVisibleUnits should include enemy units within vision range","status":"passed","title":"should include enemy units within vision range","duration":7.001948999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Unit Logic","getVisibleUnits"],"fullName":"Unit Logic getVisibleUnits should exclude enemy units outside vision range","status":"passed","title":"should exclude enemy units outside vision range","duration":0.8546700000001692,"failureMessages":[],"meta":{}}],"startTime":1751781834413,"endTime":1751781834441.8547,"status":"passed","message":"","name":"/home/runner/workspace/shared/logic/unitLogic.test.ts"},{"assertionResults":[{"ancestorTitles":["Hex Coordinate Utilities","hexDistance"],"fullName":"Hex Coordinate Utilities hexDistance should calculate distance from origin correctly","status":"passed","title":"should calculate distance from origin correctly","duration":1.81212000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexDistance"],"fullName":"Hex Coordinate Utilities hexDistance should be symmetric","status":"passed","title":"should be symmetric","duration":0.322479999999814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexDistance"],"fullName":"Hex Coordinate Utilities hexDistance should handle negative coordinates","status":"passed","title":"should handle negative coordinates","duration":0.24319000000014057,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexNeighbors"],"fullName":"Hex Coordinate Utilities hexNeighbors should return 6 neighbors for origin","status":"passed","title":"should return 6 neighbors for origin","duration":0.9488799999999173,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexNeighbors"],"fullName":"Hex Coordinate Utilities hexNeighbors should have all neighbors at distance 1","status":"passed","title":"should have all neighbors at distance 1","duration":0.6919200000002093,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexNeighbors"],"fullName":"Hex Coordinate Utilities hexNeighbors should maintain coordinate sum invariant","status":"passed","title":"should maintain coordinate sum invariant","duration":0.41113999999970474,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexAdd"],"fullName":"Hex Coordinate Utilities hexAdd should add coordinates correctly","status":"passed","title":"should add coordinates correctly","duration":1.0561499999998887,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexSubtract"],"fullName":"Hex Coordinate Utilities hexSubtract should subtract coordinates correctly","status":"passed","title":"should subtract coordinates correctly","duration":0.312539999999899,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","isValidHexCoordinate"],"fullName":"Hex Coordinate Utilities isValidHexCoordinate should validate correct coordinates","status":"passed","title":"should validate correct coordinates","duration":0.47877999999991516,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","isValidHexCoordinate"],"fullName":"Hex Coordinate Utilities isValidHexCoordinate should reject invalid coordinates","status":"passed","title":"should reject invalid coordinates","duration":0.25151999999980035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexRing"],"fullName":"Hex Coordinate Utilities hexRing should return correct number of hexes for radius 1","status":"passed","title":"should return correct number of hexes for radius 1","duration":0.539009999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexRing"],"fullName":"Hex Coordinate Utilities hexRing should return correct number of hexes for radius 2","status":"passed","title":"should return correct number of hexes for radius 2","duration":0.6835700000001452,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexRing"],"fullName":"Hex Coordinate Utilities hexRing should return empty array for radius 0","status":"passed","title":"should return empty array for radius 0","duration":0.33433999999988373,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","hexRing"],"fullName":"Hex Coordinate Utilities hexRing should have all hexes at correct distance","status":"passed","title":"should have all hexes at correct distance","duration":1.0834199999999328,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","Pixel conversion"],"fullName":"Hex Coordinate Utilities Pixel conversion should convert hex to pixel and back consistently","status":"passed","title":"should convert hex to pixel and back consistently","duration":0.5226999999999862,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hex Coordinate Utilities","Pixel conversion"],"fullName":"Hex Coordinate Utilities Pixel conversion should place origin at pixel origin","status":"passed","title":"should place origin at pixel origin","duration":0.14293999999972584,"failureMessages":[],"meta":{}}],"startTime":1751781839138,"endTime":1751781839149.1428,"status":"passed","message":"","name":"/home/runner/workspace/shared/utils/hexCoordinates.test.ts"},{"assertionResults":[{"ancestorTitles":["Line of Sight System","hexLine"],"fullName":"Line of Sight System hexLine should return a line between two adjacent hexes","status":"passed","title":"should return a line between two adjacent hexes","duration":4.48969999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","hexLine"],"fullName":"Line of Sight System hexLine should return a line between distant hexes","status":"passed","title":"should return a line between distant hexes","duration":0.8389799999999923,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","hexLine"],"fullName":"Line of Sight System hexLine should return single hex for same start and end","status":"passed","title":"should return single hex for same start and end","duration":1.3496800000002622,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","hasLineOfSight"],"fullName":"Line of Sight System hasLineOfSight should have clear line of sight on plains","status":"passed","title":"should have clear line of sight on plains","duration":0.5384500000000116,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","hasLineOfSight"],"fullName":"Line of Sight System hasLineOfSight should be blocked by mountains","status":"passed","title":"should be blocked by mountains","duration":0.3748699999996461,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","hasLineOfSight"],"fullName":"Line of Sight System hasLineOfSight should respect range limits","status":"passed","title":"should respect range limits","duration":0.3572999999996682,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","hasLineOfSight"],"fullName":"Line of Sight System hasLineOfSight should allow line of sight to adjacent tiles","status":"passed","title":"should allow line of sight to adjacent tiles","duration":0.1716799999999239,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","calculateVisibleTiles"],"fullName":"Line of Sight System calculateVisibleTiles should calculate visible tiles within range","status":"passed","title":"should calculate visible tiles within range","duration":0.46014999999988504,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","calculateVisibleTiles"],"fullName":"Line of Sight System calculateVisibleTiles should not include tiles blocked by mountains","status":"passed","title":"should not include tiles blocked by mountains","duration":0.46192999999993845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","calculateVisibleTiles"],"fullName":"Line of Sight System calculateVisibleTiles should include tiles within range that are not blocked","status":"passed","title":"should include tiles within range that are not blocked","duration":0.38479000000006636,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","getVisibleTilesInRange"],"fullName":"Line of Sight System getVisibleTilesInRange should return visible tiles using shadow casting","status":"passed","title":"should return visible tiles using shadow casting","duration":0.5433199999997669,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","getVisibleTilesInRange"],"fullName":"Line of Sight System getVisibleTilesInRange should return visible tiles using basic algorithm","status":"passed","title":"should return visible tiles using basic algorithm","duration":0.3478099999997539,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","calculateFogOfWarState"],"fullName":"Line of Sight System calculateFogOfWarState should return visible state for currently visible tiles","status":"passed","title":"should return visible state for currently visible tiles","duration":0.2996299999999792,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","calculateFogOfWarState"],"fullName":"Line of Sight System calculateFogOfWarState should return explored state for explored but not visible tiles","status":"passed","title":"should return explored state for explored but not visible tiles","duration":0.46592999999984386,"failureMessages":[],"meta":{}},{"ancestorTitles":["Line of Sight System","calculateFogOfWarState"],"fullName":"Line of Sight System calculateFogOfWarState should return hidden state for unexplored tiles","status":"passed","title":"should return hidden state for unexplored tiles","duration":0.230239999999867,"failureMessages":[],"meta":{}}],"startTime":1751781839036,"endTime":1751781839048.4658,"status":"passed","message":"","name":"/home/runner/workspace/shared/utils/lineOfSight.test.ts"}]}
